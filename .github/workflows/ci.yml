name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  rustfmt:
    name: Rust format
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt

      - run: cargo +nightly fmt -- --check

  rust:
    name: Rust lint and test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: arduino/setup-protoc@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v2

      - run: cargo test

      - run: cargo clippy --all-targets -- -D warnings

  web:
    name: Web lint, check, and build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - run: npm ci

      - run: npm run lint

      - run: npm run check

      - run: npm run build

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [rustfmt, rust, web]
    concurrency:
      group: deploy
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3

      - uses: superfly/flyctl-actions/setup-flyctl@v1

      - run: flyctl deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  binaries:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-latest
          TARGET: aarch64-apple-darwin

        - os: macos-latest
          TARGET: x86_64-apple-darwin

        - os: ubuntu-latest
          TARGET: arm-unknown-linux-musleabihf

        - os: ubuntu-latest
          TARGET: armv7-unknown-linux-musleabihf

        - os: ubuntu-latest
          TARGET: x86_64-unknown-linux-musl

        - os: windows-latest
          TARGET: x86_64-pc-windows-msvc
          EXTENSION: .exe

    steps:
    - name: Building ${{ matrix.TARGET }}
      run: echo "${{ matrix.TARGET }}"

    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1.0.1
      with:
        toolchain: stable
        target: ${{ matrix.TARGET }}
        override: true

    - uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --verbose --release --target=${{ matrix.TARGET }}

    - name: Rename
      run: |
        cp target/${{ matrix.TARGET }}/release/sshx${{ matrix.EXTENSION }} sshx-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        cp target/${{ matrix.TARGET }}/release/sshx-server${{ matrix.EXTENSION }} sshx-server-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

    - uses: actions/upload-artifact@v4
      with:
        name: sshx-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        path: sshx-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

    - uses: actions/upload-artifact@v4
      with:
        name: sshx-server-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        path: sshx-server-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

    - uses: svenstaro/upload-release-action@v2
      name: Upload binaries to release
      if: ${{ github.event_name == 'push' }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: sshx-*
        file_glob: true
        tag: ${{ github.ref }}
        prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
        overwrite: true
